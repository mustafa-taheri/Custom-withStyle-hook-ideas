
const applyStyles = (stylesObj, parentSelector = '') => {
  const styleElement = document.createElement('style');
  document.head.appendChild(styleElement);
  const styleSheet = styleElement.sheet;

  const generateUniqueClassName = () => {
    return `custom-class-${Math.random().toString(36).substring(2, 7)}`;
  };

  const processStyleObject = (styleObj, selector) => {
    Object.entries(styleObj).forEach(([key, value]) => {
      if (typeof value === 'object') {
        const nestedSelector = key.startsWith('@media') ? key : `${selector} ${key}`;
        processStyleObject(value, nestedSelector);
      } else {
        const cssProperty = convertToCssSyntax(key);
        const cssValue = value;
        const uniqueClassName = generateUniqueClassName();
        const rule = `.${uniqueClassName} { ${cssProperty}: ${cssValue}; }`;
        styleSheet.insertRule(rule, styleSheet.cssRules.length);
        _classMapping[`${selector}.${key}`] = uniqueClassName;
      }
    });
  };

  Object.entries(stylesObj).forEach(([className, styleValue]) => {
    const selector = `${parentSelector} .${className}`;
    processStyleObject(styleValue, selector);
    _classMapping[className] = className;
  });
};
