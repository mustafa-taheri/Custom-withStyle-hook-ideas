
const applyStyles = (stylesObj, parentSelector = '') => {
  const classStyles = {};

  const processStyleObject = (styleObj, selector) => {
    Object.entries(styleObj).forEach(([key, value]) => {
      if (typeof value === 'object') {
        const nestedSelector = key.startsWith('@media') ? key : `${selector} ${key}`;
        processStyleObject(value, nestedSelector);
      } else {
        const cssProperty = convertToCssSyntax(key);
        const cssValue = value;
        if (!classStyles[selector]) {
          classStyles[selector] = '';
        }
        classStyles[selector] += `${cssProperty}: ${cssValue}; `;
      }
    });
  };

  Object.entries(stylesObj).forEach(([className, styleValue]) => {
    const selector = `${parentSelector} .${className}`;
    processStyleObject(styleValue, selector);
    _classMapping[className] = className;
  });

  const styleElement = document.createElement('style');
  styleElement.textContent = Object.entries(classStyles).map(([selector, cssString]) => `${selector} { ${cssString} }`).join(' ');
  document.head.appendChild(styleElement);
};
